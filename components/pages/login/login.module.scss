@use "/styles/variables" as *;

.login-page {
  min-height: 100dvh;
  background-image: url("../../../public/images/bg-intro-mobile.png");
  background-color: map-get($map: $colors, $key: primary-red);

  &__banner {
    background-color: map-get($map: $colors, $key: accent);
    padding-inline: 3rem;
    padding-block: 1.5rem;
  }

  &__form {
    padding: 1.5rem;
    background-color: white;
    display: grid;
    gap: 1.25rem;

    & button {
      background-color: map-get($map: $colors, $key: primary-green);
      color: inherit;
      padding-block: 1.5rem;
      width: 100%;
      border-radius: 0.25rem;
      box-shadow: 0 0.25rem 0 0 rgba(#65ac87, 1);
      font-weight: $fw-500;

      &:where(:focus, :focus-visible, :focus-within) {
        outline: 1px solid rgba(#65ac87, 1);
      }
    }
  }

  &__input {
    padding-inline: 1.5rem;
    padding-block: 1.25rem;
    border-radius: 0.25rem;
    outline: 1px solid map-get($map: $colors, $key: neutral-700);
    font-weight: $fw-600;
    color: map-get($map: $colors, $key: neutral-400);

    &::placeholder {
      color: rgba(map-get($map: $colors, $key: neutral-400), 0.65);
    }

    &:where(:focus-visible, :focus, :focus-within) {
      outline: 2px solid map-get($map: $colors, $key: accent);
      border: none;
    }
  }

  &__statement {
    font-size: 0.75rem;
    color: map-get($map: $colors, $key: neutral-700);

    & a {
      font-weight: $fw-700;
      color: map-get($map: $colors, $key: primary-red);
    }
  }
}

.error {
  color: map-get($map: $colors, $key: primary-red);
  outline-color: map-get($map: $colors, $key: primary-red);

  &::placeholder {
    color: map-get($map: $colors, $key: primary-red);
  }

  &__message {
    position: absolute;
    font-size: 0.75rem;
    color: map-get($map: $colors, $key: primary-red);
    right: 0;
    top: 100%;
    font-style: italic;
  }
}

@supports (min-height: 100dvh) {
  .login-page {
    min-height: 100vh;
  }
}
